{"name":"ArraySort Utility for CakePHP","tagline":"Utility for sort arrays by multiple keys (with Hash paths) each one by desc or ask","body":"## API Documentation\r\n\r\nCheck out [ArraySort API Documentation](http://imsamurai.github.io/cakephp-arraysort-utility/docs/master/)\r\n\r\n## Abstract\r\n\r\n[![Build Status](https://travis-ci.org/imsamurai/cakephp-arraysort-utility.png)](https://travis-ci.org/imsamurai/cakephp-arraysort-utility) [![Coverage Status](https://coveralls.io/repos/imsamurai/cakephp-arraysort-utility/badge.png?branch=master)](https://coveralls.io/r/imsamurai/cakephp-arraysort-utility?branch=master) [![Latest Stable Version](https://poser.pugx.org/imsamurai/arraysort/v/stable.png)](https://packagist.org/packages/imsamurai/arraysort) [![Total Downloads](https://poser.pugx.org/imsamurai/arraysort/downloads.png)](https://packagist.org/packages/imsamurai/arraysort) [![Latest Unstable Version](https://poser.pugx.org/imsamurai/arraysort/v/unstable.png)](https://packagist.org/packages/imsamurai/arraysort) [![License](https://poser.pugx.org/imsamurai/arraysort/license.png)](https://packagist.org/packages/imsamurai/arraysort)\r\n\r\n## Installation\r\n```\r\ncd my_cake_app/app\r\ngit clone git://github.com/imsamurai/cakephp-arraysort-utility.git Plugin/ArraySort\r\n```\r\nor if you use git add as submodule:\r\n```\r\ncd my_cake_app\r\ngit submodule add \"git://github.com/imsamurai/cakephp-arraysort-utility.git\" \"app/Plugin/ArraySort\"\r\n```\r\nthen add plugin loading in Config/bootstrap.php\r\n```php\r\nCakePlugin::load('ArraySort');\r\n```\r\n## Usage\r\n\r\nIn any place of your code:\r\n```php\r\nApp::uses('ArraySort', 'ArraySort.Utility');\r\n\r\n$sorted_array = ArraySort::multisort($array, $params);\r\n```\r\nwhere `$array` is array to sort,\r\n`$params` can be string ('asc' or 'desc') or array like this:\r\n```php\r\n$params = array(\r\n        <field1> => <direction>,\r\n        <field2> => <direction2>,\r\n        ...\r\n);\r\n```\r\nFor example:\r\n```php\r\n$params = array(\r\n        'rank' => 'desc',\r\n        'created' => 'asc'\r\n);\r\n```\r\nWith this $params method will sort $array by comparing each elements firstly by rank field, if they have\r\nequal rank then sort by created field.\r\n","google":"UA-54309823-1","note":"Don't delete this file! It's used internally to help with page regeneration."}